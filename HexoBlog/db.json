{"meta":{"version":1,"warehouse":"3.0.2"},"models":{"Asset":[{"_id":"themes/3-hexo/source/img/alipay.jpg","path":"img/alipay.jpg","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/img/article-list-background.jpeg","path":"img/article-list-background.jpeg","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/img/avatar.jpg","path":"img/avatar.jpg","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/img/brown-papersq.png","path":"img/brown-papersq.png","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/img/school-book.png","path":"img/school-book.png","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/gitalk.css","path":"css/gitalk.css","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/mobile.styl","path":"css/mobile.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/js/iconfont.js","path":"js/iconfont.js","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/js/jquery.autocomplete.min.js","path":"js/jquery.autocomplete.min.js","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/js/jquery.pjax.js","path":"js/jquery.pjax.js","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/img/weixin.jpg","path":"img/weixin.jpg","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/icomoon.eot","path":"css/fonts/icomoon.eot","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/icomoon.svg","path":"css/fonts/icomoon.svg","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/iconfont.eot","path":"css/fonts/iconfont.eot","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/icomoon.ttf","path":"css/fonts/icomoon.ttf","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/icomoon.woff","path":"css/fonts/icomoon.woff","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/iconfont.svg","path":"css/fonts/iconfont.svg","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/iconfont.ttf","path":"css/fonts/iconfont.ttf","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/iconfont.woff","path":"css/fonts/iconfont.woff","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/selection.json","path":"css/fonts/selection.json","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/atom-dark.styl","path":"css/hl_theme/atom-dark.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/atom-light.styl","path":"css/hl_theme/atom-light.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/darcula.styl","path":"css/hl_theme/darcula.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/brown-paper.styl","path":"css/hl_theme/brown-paper.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/github-gist.styl","path":"css/hl_theme/github-gist.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/github.styl","path":"css/hl_theme/github.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/gruvbox-dark.styl","path":"css/hl_theme/gruvbox-dark.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/gruvbox-light.styl","path":"css/hl_theme/gruvbox-light.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/kimbie-dark.styl","path":"css/hl_theme/kimbie-dark.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/kimbie-light.styl","path":"css/hl_theme/kimbie-light.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/railscasts.styl","path":"css/hl_theme/railscasts.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/rainbow.styl","path":"css/hl_theme/rainbow.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/school-book.styl","path":"css/hl_theme/school-book.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/sublime.styl","path":"css/hl_theme/sublime.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/sunburst.styl","path":"css/hl_theme/sunburst.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/zenbum.styl","path":"css/hl_theme/zenbum.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/js/gitalk.js","path":"js/gitalk.js","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/js/gitment.js","path":"js/gitment.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/CNAME.md","hash":"04a6d01f9e344a2353c65786230aeb98995e3201","modified":1585826914122},{"_id":"themes/3-hexo/.DS_Store","hash":"0770f9d42bfdd8d420de48fed463015e001cf579","modified":1585878707108},{"_id":"source/_posts/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1585828204324},{"_id":"source/_posts/c语言中的字符串的定义及初始化和输出.md","hash":"d8eb88f2f945bbf54703bab65e87dca571402d7e","modified":1585827928878},{"_id":"source/_posts/hello-hexo.md","hash":"18cb104df2efe2cec16226ca41855e252b888616","modified":1585826914122},{"_id":"source/_posts/c语言基本运算中的自增运算符和自减运算符以及三目运算符.md","hash":"77829653d2578a65d4314db8d3e93c4ceddac168","modified":1585827815612},{"_id":"source/_posts/c语言基本数据类型简单介绍.md","hash":"e84906b92f46c9cadc88c560a0b19487c53d392a","modified":1585827610658},{"_id":"source/categories/index.md","hash":"dbe6e5574a9e6a1f339b0d5791149c2b91fdca15","modified":1585827088252},{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1585826914122},{"_id":"public/CNAME.html","hash":"269253a50759eb543dded5be77b81f62cccbc35d","modified":1585878994431},{"_id":"public/categories/index.html","hash":"939b17dd4d4580b9e9dec3d17cf4688d7e1f750c","modified":1585878994431},{"_id":"public/2020/04/02/c语言中的字符串的定义及初始化和输出/index.html","hash":"0cdbebb5c7e2dcbf616fa36431152d1914cf6bf4","modified":1585878994431},{"_id":"public/2020/04/02/c语言基本运算中的自增运算符和自减运算符以及三目运算符/index.html","hash":"2c8f64a79f7d1707d8209808020c54bbdb4b7be4","modified":1585878994431},{"_id":"public/2020/04/02/c语言基本数据类型简单介绍/index.html","hash":"fbf6a0892536e47a20b7693b299b908a017f3678","modified":1585878994431},{"_id":"public/2020/04/02/hello-world/index.html","hash":"26978cfd27a88b6eea62085fe597bd3039aa2f5a","modified":1585878994431},{"_id":"public/2020/04/02/hello-hexo/index.html","hash":"2d5c36c43b0105f46e9a91039ed6e3574ed86b14","modified":1585878994431},{"_id":"public/archives/index.html","hash":"534a46f2e5c7c64c2843c365c5e2d255559f99de","modified":1585878994431},{"_id":"public/archives/2020/index.html","hash":"534a46f2e5c7c64c2843c365c5e2d255559f99de","modified":1585878994431},{"_id":"public/archives/2020/04/index.html","hash":"534a46f2e5c7c64c2843c365c5e2d255559f99de","modified":1585878994431},{"_id":"public/categories/C语言/index.html","hash":"534a46f2e5c7c64c2843c365c5e2d255559f99de","modified":1585878994431},{"_id":"public/categories/Hexo/index.html","hash":"534a46f2e5c7c64c2843c365c5e2d255559f99de","modified":1585878994431},{"_id":"public/index.html","hash":"534a46f2e5c7c64c2843c365c5e2d255559f99de","modified":1585878994431},{"_id":"themes/3-hexo/.gitignore","hash":"86a50fa08e69cab561892aa5edef24f9081bbde1","modified":1585878987262},{"_id":"themes/3-hexo/LICENSE","hash":"b04140c5f682db2b300428f97bb164fd7f5f18bd","modified":1585878987262},{"_id":"themes/3-hexo/README.md","hash":"e09f474a250f3e862d1d1c2a0c2af675e756a31a","modified":1585878987262},{"_id":"themes/3-hexo/_config.yml","hash":"dac9db1f920c5e0d283b0895202d2ed483399c5a","modified":1585878987262},{"_id":"themes/3-hexo/layout/index.ejs","hash":"003421f9a57927aa85aa71905313badb0b47820e","modified":1585878987266},{"_id":"themes/3-hexo/layout/indexs.md","hash":"e98b27005c0fb0d7618ae3815654ac33f8c02313","modified":1585878987266},{"_id":"themes/3-hexo/layout/post.ejs","hash":"810f046277fc49f523a72d1552eab1e39d3c299c","modified":1585878987266},{"_id":"themes/3-hexo/source/.DS_Store","hash":"fdcc907c46e093a14b153c5dc8c038461997ed3c","modified":1585878987266},{"_id":"themes/3-hexo/layout/_partial/article.ejs","hash":"a0a0f191faafca2aa14abd32ec1b1a385dae1af7","modified":1585878987262},{"_id":"themes/3-hexo/layout/_partial/article_copyright.ejs","hash":"7f28d7736133cc8012fbb8a5eeeb1174b862aec6","modified":1585878987263},{"_id":"themes/3-hexo/layout/_partial/comment.ejs","hash":"5507b4dfab2032345e012a0c5356f63b01395157","modified":1585878987263},{"_id":"themes/3-hexo/layout/_partial/copyright.ejs","hash":"d209ddcfd0149760a30837076be345a09e1797c5","modified":1585878987264},{"_id":"themes/3-hexo/layout/_partial/footer.ejs","hash":"9ba925f69d273c8f802e67a99eadd21da91b5673","modified":1585878987264},{"_id":"themes/3-hexo/layout/_partial/dashang.ejs","hash":"1b849749e557d2af482dc49acc93407b72c717f3","modified":1585878987264},{"_id":"themes/3-hexo/layout/_partial/friends.ejs","hash":"7a31274da81c076021692ff7c80a1be3bbf6fa4c","modified":1585878987264},{"_id":"themes/3-hexo/layout/_partial/full-toc.ejs","hash":"f39f2ab3a67042e55cd6a51792bfd5ad697808f0","modified":1585878987264},{"_id":"themes/3-hexo/layout/_partial/header.ejs","hash":"30c3ab5847a18db678ffbe3fc6309ec96cb010c0","modified":1585878987265},{"_id":"themes/3-hexo/layout/_partial/mathjax.ejs","hash":"c2e5cef2377884cd79e5f686fe4f74b082744306","modified":1585878987265},{"_id":"themes/3-hexo/layout/_partial/meta.ejs","hash":"4f7e00e37783208cb350842085f1987ee854452e","modified":1585878987265},{"_id":"themes/3-hexo/layout/_partial/nav-left.ejs","hash":"c2c08485361645d7e75addb7a458647477a6f8db","modified":1585878987265},{"_id":"themes/3-hexo/layout/_partial/nav-right.ejs","hash":"ad54659a10f0c75b502da6f0ae07f18f55c9d3ab","modified":1585878987265},{"_id":"themes/3-hexo/layout/_partial/toc-ref.ejs","hash":"6406251dabda66ef686d4c15edbc3061b6d828b8","modified":1585878987265},{"_id":"themes/3-hexo/layout/_partial/tag.ejs","hash":"71340ddd60ea14061771463140e299204ecf7ed9","modified":1585878987265},{"_id":"themes/3-hexo/source/img/alipay.jpg","hash":"e457d1d3dfefbbd824d154cf756a2c6d10b812a2","modified":1585878987277},{"_id":"themes/3-hexo/source/img/article-list-background.jpeg","hash":"4fdf8b3e53dd02d6ee6360aebfadb0cba1fb5633","modified":1585878987277},{"_id":"themes/3-hexo/source/img/avatar.jpg","hash":"a42360089bfa892d803cf5747eab359d90f337f1","modified":1585878987278},{"_id":"themes/3-hexo/source/img/brown-papersq.png","hash":"3a1332ede3a75a3d24f60b6ed69035b72da5e182","modified":1585878987279},{"_id":"themes/3-hexo/source/img/school-book.png","hash":"711ec983c874e093bb89eb77afcbdf6741fa61ee","modified":1585878987279},{"_id":"themes/3-hexo/source/css/gitalk.css","hash":"58177ce227c50ee359fbf99a4fdd26058887afc5","modified":1585878987273},{"_id":"themes/3-hexo/source/css/mobile.styl","hash":"3934bcba5095e7e6c6b3a801a6e4fa3a35096e10","modified":1585878987276},{"_id":"themes/3-hexo/source/css/style.styl","hash":"c7285882370f522c3bb17055cdf615cf92f48cd0","modified":1585878987276},{"_id":"themes/3-hexo/source/js/iconfont.js","hash":"3a0869ca1b09af07d82987e343a3bc4cb9558ecb","modified":1585878987283},{"_id":"themes/3-hexo/source/js/jquery.autocomplete.min.js","hash":"7b8ac4d06c9e763963832529f44a56ad42a81e5f","modified":1585878987283},{"_id":"themes/3-hexo/source/js/jquery.pjax.js","hash":"191c49fdb40dff115a49cfd2b30dffb888d86550","modified":1585878987284},{"_id":"themes/3-hexo/source/js/script.js","hash":"7502191e29366a11323dc72ae365b1aed254e6f2","modified":1585878987284},{"_id":"themes/3-hexo/source/js/search.js","hash":"c80c9a231ee040c7adc07a477793873fb85ce8bc","modified":1585878987284},{"_id":"themes/3-hexo/source/img/weixin.jpg","hash":"8dafb22561698d0758fba9ea2a45abf6ad3512a2","modified":1585878987280},{"_id":"themes/3-hexo/layout/_partial/comments/click2show.ejs","hash":"fa6675230f8c313236604e26926b142f4f418bdd","modified":1585878987263},{"_id":"themes/3-hexo/layout/_partial/comments/disqus.ejs","hash":"cd0022ce7e6d6efb07a00e87477cdf791f7f6703","modified":1585878987263},{"_id":"themes/3-hexo/layout/_partial/comments/gentie.ejs","hash":"1d6eacdadeb247e3b349ca7168f797beae8ff4c5","modified":1585878987263},{"_id":"themes/3-hexo/layout/_partial/comments/gitalk.ejs","hash":"fbd3c7d72c8354d700918390c6cbfc0a11408277","modified":1585878987263},{"_id":"themes/3-hexo/layout/_partial/comments/gitment.ejs","hash":"f16442568b43d034faaa8e3507f5ae8da34c7b72","modified":1585878987264},{"_id":"themes/3-hexo/source/css/_partial/autocomplete.styl","hash":"f6847a2c6d35dbd6d06dc591bd34ed2019784048","modified":1585878987266},{"_id":"themes/3-hexo/source/css/_partial/comment.styl","hash":"cc0a862b31359a85d12579e49d2eca58d128275c","modified":1585878987266},{"_id":"themes/3-hexo/source/css/_partial/dashang.styl","hash":"f6447a2ac407228e1d53e3455db2919ac0e9f094","modified":1585878987267},{"_id":"themes/3-hexo/source/css/_partial/fade.styl","hash":"4f687cbc74caf8a0887f5e89250284a9bce8b5c1","modified":1585878987267},{"_id":"themes/3-hexo/source/css/_partial/font.styl","hash":"4d5ac149709447c5eee45f0e23dadeea94fd98ce","modified":1585878987267},{"_id":"themes/3-hexo/source/css/_partial/full-toc.styl","hash":"0ba318911afbbbffbd2473b472aedf2d3900e978","modified":1585878987267},{"_id":"themes/3-hexo/source/css/_partial/nav-left.styl","hash":"1bd865029ba8c11750fff83d87f69e5d7c137928","modified":1585878987268},{"_id":"themes/3-hexo/source/css/_partial/nav-right.styl","hash":"3da8fa04efccfd054a6a65f7153f197d4d68281d","modified":1585878987268},{"_id":"themes/3-hexo/source/css/_partial/nprogress.styl","hash":"65efbddd23a264e7d1e85f4073228526770e833c","modified":1585878987268},{"_id":"themes/3-hexo/source/css/_partial/num-load.styl","hash":"4b996440bba8ec755aa70bc6d074d7dbba55ec0c","modified":1585878987268},{"_id":"themes/3-hexo/source/css/_partial/post.styl","hash":"c791204c5f10fd876025abf08f4dcb3ca5dde3b6","modified":1585878987269},{"_id":"themes/3-hexo/source/css/fonts/icomoon.eot","hash":"b6195bedc1cb2f9cfcb26cc27021f2e94be2ab0a","modified":1585878987269},{"_id":"themes/3-hexo/source/css/fonts/icomoon.svg","hash":"37ac1ef28b03f46bf3ad2606c86f0e1ec3e4405f","modified":1585878987269},{"_id":"themes/3-hexo/source/css/fonts/iconfont.eot","hash":"3dfe8e557d9dfaf39bca088a02b76deb82dbaa3d","modified":1585878987270},{"_id":"themes/3-hexo/source/css/fonts/icomoon.ttf","hash":"eb976d8b8559fcddfc2658a03a4350cb566fc06b","modified":1585878987270},{"_id":"themes/3-hexo/source/css/fonts/icomoon.woff","hash":"3985d29416bb9b19f50a2f20f2bbbce47f10af8d","modified":1585878987270},{"_id":"themes/3-hexo/source/css/fonts/iconfont.svg","hash":"c61a31e5310430312677fffe4286097d29d10151","modified":1585878987271},{"_id":"themes/3-hexo/source/css/fonts/iconfont.ttf","hash":"aa087561480fb9c2cfd541e33d1e99d5ac1a56bb","modified":1585878987272},{"_id":"themes/3-hexo/source/css/fonts/iconfont.woff","hash":"f8ed131ccf13f4bdd3ec11fc3e997339dd7b66ba","modified":1585878987272},{"_id":"themes/3-hexo/source/css/fonts/selection.json","hash":"57c7f100019d57b512aab509185cb0a6eb9aa4c8","modified":1585878987272},{"_id":"themes/3-hexo/source/css/hl_theme/atom-dark.styl","hash":"f3eb4e5feda9cbd6242ccf44ca064e2979b5d719","modified":1585878987273},{"_id":"themes/3-hexo/source/css/hl_theme/atom-light.styl","hash":"69d184a682bcaeba2b180b437dc4431bc3be38aa","modified":1585878987273},{"_id":"themes/3-hexo/source/css/hl_theme/darcula.styl","hash":"2bfc14f27ccca108b4b3755782de8366e8bd001e","modified":1585878987273},{"_id":"themes/3-hexo/source/css/hl_theme/brown-paper.styl","hash":"03af387edcc1cf8c18d12e9c440fd51b6cf425b6","modified":1585878987273},{"_id":"themes/3-hexo/source/css/hl_theme/github-gist.styl","hash":"5e05b19832c1099bd9d284bc3ed00dc8a3d7ee23","modified":1585878987274},{"_id":"themes/3-hexo/source/css/hl_theme/github.styl","hash":"53276ff1f224f691dfe811e82c0af7f4476abf5d","modified":1585878987274},{"_id":"themes/3-hexo/source/css/hl_theme/gruvbox-dark.styl","hash":"315ad610d303caba9eac80a7d51002193a15478a","modified":1585878987274},{"_id":"themes/3-hexo/source/css/hl_theme/gruvbox-light.styl","hash":"1bece084b1dbbbd4af064f05feffd8c332b96a48","modified":1585878987274},{"_id":"themes/3-hexo/source/css/hl_theme/kimbie-dark.styl","hash":"e9c190f9ffc37a13cac430512e4e0c760205be4a","modified":1585878987274},{"_id":"themes/3-hexo/source/css/hl_theme/kimbie-light.styl","hash":"0c3ccd0d64e7504c7061d246dc32737f502f64e4","modified":1585878987275},{"_id":"themes/3-hexo/source/css/hl_theme/railscasts.styl","hash":"a6e8cfd2202afd7893f5268f3437421e35066e7b","modified":1585878987275},{"_id":"themes/3-hexo/source/css/hl_theme/rainbow.styl","hash":"e5c37646a9d9c1094f9aab7a7c65a4b242e8db00","modified":1585878987275},{"_id":"themes/3-hexo/source/css/hl_theme/school-book.styl","hash":"51659351b391a2be5c68728bb51b7ad467c5e0db","modified":1585878987275},{"_id":"themes/3-hexo/source/css/hl_theme/sublime.styl","hash":"501d75ef0f4385bea24d9b9b4cc434ba68d4be27","modified":1585878987275},{"_id":"themes/3-hexo/source/css/hl_theme/sunburst.styl","hash":"2aa9817e68fb2ed216781ea04b733039ebe18214","modified":1585878987276},{"_id":"themes/3-hexo/source/css/hl_theme/zenbum.styl","hash":"933a3b196d01254dea5e6f48105ea15e210ae000","modified":1585878987276},{"_id":"themes/3-hexo/source/js/gitalk.js","hash":"00419a6156f5d4f9b8aba00d446cd64ba73e0d12","modified":1585878987282},{"_id":"themes/3-hexo/source/js/gitment.js","hash":"59a1e03f2b0ce61dd9bd405d3c52d3e07cc10dec","modified":1585878987283},{"_id":"public/img/alipay.jpg","hash":"e457d1d3dfefbbd824d154cf756a2c6d10b812a2","modified":1585878994431},{"_id":"public/img/article-list-background.jpeg","hash":"4fdf8b3e53dd02d6ee6360aebfadb0cba1fb5633","modified":1585878994431},{"_id":"public/img/avatar.jpg","hash":"a42360089bfa892d803cf5747eab359d90f337f1","modified":1585878994431},{"_id":"public/img/brown-papersq.png","hash":"3a1332ede3a75a3d24f60b6ed69035b72da5e182","modified":1585878994431},{"_id":"public/img/school-book.png","hash":"711ec983c874e093bb89eb77afcbdf6741fa61ee","modified":1585878994431},{"_id":"public/css/fonts/icomoon.eot","hash":"b6195bedc1cb2f9cfcb26cc27021f2e94be2ab0a","modified":1585878994431},{"_id":"public/css/fonts/icomoon.svg","hash":"37ac1ef28b03f46bf3ad2606c86f0e1ec3e4405f","modified":1585878994431},{"_id":"public/css/fonts/iconfont.eot","hash":"3dfe8e557d9dfaf39bca088a02b76deb82dbaa3d","modified":1585878994431},{"_id":"public/css/fonts/icomoon.ttf","hash":"eb976d8b8559fcddfc2658a03a4350cb566fc06b","modified":1585878994431},{"_id":"public/css/fonts/icomoon.woff","hash":"3985d29416bb9b19f50a2f20f2bbbce47f10af8d","modified":1585878994431},{"_id":"public/css/fonts/iconfont.svg","hash":"c61a31e5310430312677fffe4286097d29d10151","modified":1585878994431},{"_id":"public/css/fonts/iconfont.woff","hash":"f8ed131ccf13f4bdd3ec11fc3e997339dd7b66ba","modified":1585878994431},{"_id":"public/css/fonts/iconfont.ttf","hash":"aa087561480fb9c2cfd541e33d1e99d5ac1a56bb","modified":1585878994431},{"_id":"public/img/weixin.jpg","hash":"8dafb22561698d0758fba9ea2a45abf6ad3512a2","modified":1585878994431},{"_id":"public/css/mobile.css","hash":"79ab291be160e0ca753512a96c5198f7477f13be","modified":1585878994431},{"_id":"public/js/jquery.autocomplete.min.js","hash":"7b8ac4d06c9e763963832529f44a56ad42a81e5f","modified":1585878994431},{"_id":"public/js/search.js","hash":"c80c9a231ee040c7adc07a477793873fb85ce8bc","modified":1585878994431},{"_id":"public/css/hl_theme/atom-light.css","hash":"a3c8f3ee9a655594eff7ac545cb2e6914c1abcc2","modified":1585878994431},{"_id":"public/css/hl_theme/brown-paper.css","hash":"500c8e750373f6656ff49a7857c871ceedcf8777","modified":1585878994431},{"_id":"public/css/hl_theme/atom-dark.css","hash":"88d11052a24e8100af6248eb4dbe1ce7b0e96408","modified":1585878994431},{"_id":"public/css/hl_theme/github.css","hash":"e05a0806a508a26b9f3f3794b6b588ec6504ad3f","modified":1585878994431},{"_id":"public/css/hl_theme/github-gist.css","hash":"7a41c1c479d09df875f99f1f6d94aac42e9e2ad0","modified":1585878994431},{"_id":"public/css/hl_theme/gruvbox-light.css","hash":"30514aaa242a34647aa666cfca4fc74c595ea8f2","modified":1585878994431},{"_id":"public/css/hl_theme/gruvbox-dark.css","hash":"8c440d9b4ee19ac03eaee3c6af78ba52e5ba5535","modified":1585878994431},{"_id":"public/css/hl_theme/kimbie-dark.css","hash":"728527fcc308da454722c119b89e6da3025bd1e3","modified":1585878994431},{"_id":"public/css/hl_theme/kimbie-light.css","hash":"0c61926c989163faefb031d27bce3e287d6e10f2","modified":1585878994431},{"_id":"public/css/hl_theme/darcula.css","hash":"4341074bae4bc9f0b86e32b623e27babc0159b6e","modified":1585878994431},{"_id":"public/css/hl_theme/rainbow.css","hash":"7ff4251938076ddb7e4e49413db82653e5b61321","modified":1585878994431},{"_id":"public/css/hl_theme/railscasts.css","hash":"511f2fd2a84d426e5da5cb17880cc08f73beb002","modified":1585878994431},{"_id":"public/css/hl_theme/sublime.css","hash":"f65c5b116d9213afb9c324384a2f3bc86cb71121","modified":1585878994431},{"_id":"public/css/hl_theme/school-book.css","hash":"ffbbcd13a74ac2404262c50b7a43053dfd0096ff","modified":1585878994431},{"_id":"public/css/hl_theme/sunburst.css","hash":"8a135abac1512cf430d1d1ad2304b79afa1a4d6e","modified":1585878994431},{"_id":"public/css/hl_theme/zenbum.css","hash":"0a78f74a93568e20b32ca7427c719e9bae9a0b55","modified":1585878994431},{"_id":"public/css/gitalk.css","hash":"58177ce227c50ee359fbf99a4fdd26058887afc5","modified":1585878994431},{"_id":"public/css/style.css","hash":"fc4b532e837d1177f0cb6957985bdf07c708c9d7","modified":1585878994431},{"_id":"public/js/iconfont.js","hash":"3a0869ca1b09af07d82987e343a3bc4cb9558ecb","modified":1585878994431},{"_id":"public/js/jquery.pjax.js","hash":"191c49fdb40dff115a49cfd2b30dffb888d86550","modified":1585878994431},{"_id":"public/js/script.js","hash":"7502191e29366a11323dc72ae365b1aed254e6f2","modified":1585878994431},{"_id":"public/css/fonts/selection.json","hash":"047b615ea32dc48dae5b964061427d41feaaafdf","modified":1585878994431},{"_id":"public/js/gitalk.js","hash":"00419a6156f5d4f9b8aba00d446cd64ba73e0d12","modified":1585878994431},{"_id":"public/js/gitment.js","hash":"59a1e03f2b0ce61dd9bd405d3c52d3e07cc10dec","modified":1585878994431}],"Category":[{"name":"C语言","_id":"ck8jj90tc00039ufybxcy4l47"},{"name":"Hexo","_id":"ck8jj90tf00069ufy0q8c0j1h"}],"Data":[],"Page":[{"_content":"pangzhanli.top\n","source":"CNAME.md","raw":"pangzhanli.top\n","date":"2020-04-02T11:28:34.122Z","updated":"2020-04-02T11:28:34.122Z","path":"CNAME.html","title":"","comments":1,"layout":"page","_id":"ck8jj90t300009ufy3jsxe1hc","content":"<p>pangzhanli.top</p>\n","site":{"data":{}},"excerpt":"","more":"<p>pangzhanli.top</p>\n"},{"title":"分类1","date":"2020-04-02T10:14:39.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 分类1\ndate: 2020-04-02 18:14:39\ntype: categories\n---\n","updated":"2020-04-02T11:31:28.252Z","path":"categories/index.html","comments":1,"layout":"page","_id":"ck8jj90ti000c9ufy30vp3sni","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"c语言中的字符串的定义及初始化和输出","date":"2020-04-02T11:44:45.000Z","_content":"\n简介：\n\nc语言中的字符串没有像java中那样，用String来存储字符串。从字符串上分析，字符串其实是由多个字符祖闯，所以在C语言中，可以用字符数组来存储字符串。\n\n字符串数组可以看成一个特殊的字符串数组，一般情况下，在字符串的末尾加上一个结束标志\\0 。\\0是一个空操作符号，表示什么都不作。所以，采用字符数组存储字符串时，末尾应该包含结束标志\\0。\n\n\n\n字符串的初始化：\n\n例如：\n\nchar a[4]={'p','z','l','\\0'}；\n\n\n\nchar c[2];\n\nc[0]='a';\n\nc[1]='b';\n\nc[2]='\\0';\n\n\n\n字符串的输出：\n\n1,用printf函数输出  \n\nchar a[4]={'p','z','l','\\0'};\n\nprinft(\"%s\",a);\n\n输出结果：pzl\n\n2,puts函数\n\n用法： 例如：\n\nputs(“pzl”);   \n\n输出结果：pzl\n\nputs函数一次只能输出一个字符串，但printf函数则可以同时输出多个字符串。\n\n同时输出多个字符串：printf(“%s - %s”,\"pzl\",“pzl”);","source":"_posts/c语言中的字符串的定义及初始化和输出.md","raw":"---\ntitle: c语言中的字符串的定义及初始化和输出\ndate: 2020-04-02 19:44:45\ncategories: C语言\n---\n\n简介：\n\nc语言中的字符串没有像java中那样，用String来存储字符串。从字符串上分析，字符串其实是由多个字符祖闯，所以在C语言中，可以用字符数组来存储字符串。\n\n字符串数组可以看成一个特殊的字符串数组，一般情况下，在字符串的末尾加上一个结束标志\\0 。\\0是一个空操作符号，表示什么都不作。所以，采用字符数组存储字符串时，末尾应该包含结束标志\\0。\n\n\n\n字符串的初始化：\n\n例如：\n\nchar a[4]={'p','z','l','\\0'}；\n\n\n\nchar c[2];\n\nc[0]='a';\n\nc[1]='b';\n\nc[2]='\\0';\n\n\n\n字符串的输出：\n\n1,用printf函数输出  \n\nchar a[4]={'p','z','l','\\0'};\n\nprinft(\"%s\",a);\n\n输出结果：pzl\n\n2,puts函数\n\n用法： 例如：\n\nputs(“pzl”);   \n\n输出结果：pzl\n\nputs函数一次只能输出一个字符串，但printf函数则可以同时输出多个字符串。\n\n同时输出多个字符串：printf(“%s - %s”,\"pzl\",“pzl”);","slug":"c语言中的字符串的定义及初始化和输出","published":1,"updated":"2020-04-02T11:45:28.878Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8jj90t900019ufy0hib2zku","content":"<p>简介：</p>\n<p>c语言中的字符串没有像java中那样，用String来存储字符串。从字符串上分析，字符串其实是由多个字符祖闯，所以在C语言中，可以用字符数组来存储字符串。</p>\n<p>字符串数组可以看成一个特殊的字符串数组，一般情况下，在字符串的末尾加上一个结束标志\\0 。\\0是一个空操作符号，表示什么都不作。所以，采用字符数组存储字符串时，末尾应该包含结束标志\\0。</p>\n<p>字符串的初始化：</p>\n<p>例如：</p>\n<p>char a[4]={‘p’,’z’,’l’,’\\0’}；</p>\n<p>char c[2];</p>\n<p>c[0]=’a’;</p>\n<p>c[1]=’b’;</p>\n<p>c[2]=’\\0’;</p>\n<p>字符串的输出：</p>\n<p>1,用printf函数输出  </p>\n<p>char a[4]={‘p’,’z’,’l’,’\\0’};</p>\n<p>prinft(“%s”,a);</p>\n<p>输出结果：pzl</p>\n<p>2,puts函数</p>\n<p>用法： 例如：</p>\n<p>puts(“pzl”);   </p>\n<p>输出结果：pzl</p>\n<p>puts函数一次只能输出一个字符串，但printf函数则可以同时输出多个字符串。</p>\n<p>同时输出多个字符串：printf(“%s - %s”,”pzl”,“pzl”);</p>\n","site":{"data":{}},"excerpt":"","more":"<p>简介：</p>\n<p>c语言中的字符串没有像java中那样，用String来存储字符串。从字符串上分析，字符串其实是由多个字符祖闯，所以在C语言中，可以用字符数组来存储字符串。</p>\n<p>字符串数组可以看成一个特殊的字符串数组，一般情况下，在字符串的末尾加上一个结束标志\\0 。\\0是一个空操作符号，表示什么都不作。所以，采用字符数组存储字符串时，末尾应该包含结束标志\\0。</p>\n<p>字符串的初始化：</p>\n<p>例如：</p>\n<p>char a[4]={‘p’,’z’,’l’,’\\0’}；</p>\n<p>char c[2];</p>\n<p>c[0]=’a’;</p>\n<p>c[1]=’b’;</p>\n<p>c[2]=’\\0’;</p>\n<p>字符串的输出：</p>\n<p>1,用printf函数输出  </p>\n<p>char a[4]={‘p’,’z’,’l’,’\\0’};</p>\n<p>prinft(“%s”,a);</p>\n<p>输出结果：pzl</p>\n<p>2,puts函数</p>\n<p>用法： 例如：</p>\n<p>puts(“pzl”);   </p>\n<p>输出结果：pzl</p>\n<p>puts函数一次只能输出一个字符串，但printf函数则可以同时输出多个字符串。</p>\n<p>同时输出多个字符串：printf(“%s - %s”,”pzl”,“pzl”);</p>\n"},{"title":"Hexo简单介绍","date":"2020-04-02T08:52:27.000Z","_content":"\n## 一、hexo简介\n\n#### 1, hexo是什么\n> hexo(中文官方网站)是一个快速, 简洁且高效的博客框架. 让上百个页面在几秒内瞬间完成渲染. hexo支持Github Flavored Markdown的所有功能, 甚至可以整合Octopress的大多数插件. 并自己也拥有强大的插件系统.\n\n#### 2, 安装\n\n``` \nHexo是基于node.js的, 所以我们在安装它之前需要用到npm安装工具, 这个工具是 node.js 安装包的工具, 所以, 我们先要安装 node.js.\n``` \n\n使用apt-get安装 nodejs.\n\n``` \n$ sudo apt-get install -y nodejs\n``` \n\n#### 3, 安装npm\n\n已经安装好了nodejs, 现在安装npm.\n\n``` \n$ sudo apt-get install npm\n``` \n\n#### 4, 安装hexo\n\n现在我们使用npm安装hexo.\n\n``` \n$ sudo npm install hexo-cli -g\n``` \n\n## 二、创建Blog\n\n现在我们已经完成hexo的安装, 那么现在我们来创建一个Blog.\n\n#### 1, 创建一个叫blog网站\n\n``` \n$ hexo init blog\n``` \n\n> 注: 如果不写blog, 就会在当前目录进行初始化. 如果后面跟了名子就会创建目录并在目录进行初始化操作, 以这个名子为目录名.\n\n\n#### 2, 我们进入创建的blog目录里. 并运行该服务.\n\n``` \n$ cd blog\n$ npm install\n$ hexo server\n``` \n\n#### 3, 打开浏览器, 在地址栏输入http://localhost:4000/可以看到我们刚刚创建的blog首页.\n\n#### 4, 修改blog目录下的_config.yml配置文件将网站自部署到Github上.\n\n``` \ndeploy:\n  type: 'git'\n  repository: https://github.com/pangzhanli/pangzhanli.github.io.git\n  branch: master\n``` \n\n>注意在type前面需要增加两个空格, 在type的冒号后面需要增加一个空格. 请保持代码风格一致. 否则会出现错误或是不正确的问题.\n\n#### 5, 安装部署使用到的git插件.\n\n在这里我们使用的是git源码管理工具, 所以, 我需要安装git包进行部署, 安装这个插件才能使用git进行自动部署\n\n``` \n$ npm install hexo-deployer-git --save\n``` \n\n#### 6, 进行生成网站\n当我们部署网站前, 需要先生成静态网站. 它会自动在目录下创建public的目录, 并将新生成的网页存放在这个目录里.\n\n``` \n$ cd blog\n$ hexo g\n``` \n\n#### 7, 进行自动部署网站, 注意部署前需要重新生成网站, 每一次修改后都需要重新生成网站并进行部署, 生成网站前第6步.\n``` \n$ hexo d\n``` \n\n如果在部署出现错误信息如果下: 请参考第5步, 需要安装git插件\n\n``` \nERROR Deployer not found: git\n``` \n\n\n## 三、hexo常用命令\n\n#### 1, 安装，升级，初始化\n\n``` \nnpm install hexo -g #安装  \nnpm update hexo -g #升级  \nhexo init #初始化\n``` \n\n#### 2, 简写：\n\n``` \nhexo n \"我的博客\" == hexo new \"我的博客\" #新建文章\nhexo p == hexo publish\nhexo g == hexo generate#生成\nhexo s == hexo server #启动服务预览\nhexo d == hexo deploy#部署\n``` \n\n#### 3, 服务器：\n\n``` \nhexo server #Hexo 会监视文件变动并自动更新，您无须重启服务器。\nhexo server -s #静态模式\nhexo server -p 5000 #更改端口\nhexo server -i 192.168.1.1 #自定义 IP\n\nhexo clean #清除缓存 网页正常情况下可以忽略此条命令\nhexo g #生成静态网页\nhexo d #开始部署\n``` \n\n#### 4, 监视文件变动：\n\n``` \nhexo generate #使用 Hexo 生成静态文件快速而且简单\nhexo generate --watch #监视文件变动\n``` \n\n完成后部署：\n\n- 两个命令的作用是相同的\n- hexo generate --deploy\n- hexo deploy --generate\n\n``` \nhexo deploy -g\nhexo server -g\n``` \n\n#### 5, 草稿\n\n``` \nhexo publish [layout] <title>\n``` \n\n#### 6, 模版\n\n``` \nhexo new \"postName\" #新建文章\nhexo new page \"pageName\" #新建页面\nhexo generate #生成静态页面至public目录\nhexo server #开启预览访问端口（默认端口4000，'ctrl + c'关闭server）\nhexo deploy #将.deploy目录部署到GitHub\n\nhexo new [layout] <title>\nhexo new photo \"My Gallery\"\nhexo new \"Hello World\" --lang tw\n``` \n\n| 变量 | 描述 |\n| --- | --- | \n| layout | 布局 |\n| title | 标题 |\n| date | 文件建立日期 |\n\n``` \ntitle: 使用Hexo搭建个人博客\nlayout: post\ndate: 2014-03-03 19:07:43\ncomments: true\ncategories: Blog\ntags: [Hexo]\nkeywords: Hexo, Blog\ndescription: 生命在于折腾，又把博客折腾到Hexo了。给Hexo点赞。\n``` \n","source":"_posts/hello-hexo.md","raw":"---\ntitle: 'Hexo简单介绍'\ndate: 2020-04-02 16:52:27\ncategories: Hexo\ntags:\n---\n\n## 一、hexo简介\n\n#### 1, hexo是什么\n> hexo(中文官方网站)是一个快速, 简洁且高效的博客框架. 让上百个页面在几秒内瞬间完成渲染. hexo支持Github Flavored Markdown的所有功能, 甚至可以整合Octopress的大多数插件. 并自己也拥有强大的插件系统.\n\n#### 2, 安装\n\n``` \nHexo是基于node.js的, 所以我们在安装它之前需要用到npm安装工具, 这个工具是 node.js 安装包的工具, 所以, 我们先要安装 node.js.\n``` \n\n使用apt-get安装 nodejs.\n\n``` \n$ sudo apt-get install -y nodejs\n``` \n\n#### 3, 安装npm\n\n已经安装好了nodejs, 现在安装npm.\n\n``` \n$ sudo apt-get install npm\n``` \n\n#### 4, 安装hexo\n\n现在我们使用npm安装hexo.\n\n``` \n$ sudo npm install hexo-cli -g\n``` \n\n## 二、创建Blog\n\n现在我们已经完成hexo的安装, 那么现在我们来创建一个Blog.\n\n#### 1, 创建一个叫blog网站\n\n``` \n$ hexo init blog\n``` \n\n> 注: 如果不写blog, 就会在当前目录进行初始化. 如果后面跟了名子就会创建目录并在目录进行初始化操作, 以这个名子为目录名.\n\n\n#### 2, 我们进入创建的blog目录里. 并运行该服务.\n\n``` \n$ cd blog\n$ npm install\n$ hexo server\n``` \n\n#### 3, 打开浏览器, 在地址栏输入http://localhost:4000/可以看到我们刚刚创建的blog首页.\n\n#### 4, 修改blog目录下的_config.yml配置文件将网站自部署到Github上.\n\n``` \ndeploy:\n  type: 'git'\n  repository: https://github.com/pangzhanli/pangzhanli.github.io.git\n  branch: master\n``` \n\n>注意在type前面需要增加两个空格, 在type的冒号后面需要增加一个空格. 请保持代码风格一致. 否则会出现错误或是不正确的问题.\n\n#### 5, 安装部署使用到的git插件.\n\n在这里我们使用的是git源码管理工具, 所以, 我需要安装git包进行部署, 安装这个插件才能使用git进行自动部署\n\n``` \n$ npm install hexo-deployer-git --save\n``` \n\n#### 6, 进行生成网站\n当我们部署网站前, 需要先生成静态网站. 它会自动在目录下创建public的目录, 并将新生成的网页存放在这个目录里.\n\n``` \n$ cd blog\n$ hexo g\n``` \n\n#### 7, 进行自动部署网站, 注意部署前需要重新生成网站, 每一次修改后都需要重新生成网站并进行部署, 生成网站前第6步.\n``` \n$ hexo d\n``` \n\n如果在部署出现错误信息如果下: 请参考第5步, 需要安装git插件\n\n``` \nERROR Deployer not found: git\n``` \n\n\n## 三、hexo常用命令\n\n#### 1, 安装，升级，初始化\n\n``` \nnpm install hexo -g #安装  \nnpm update hexo -g #升级  \nhexo init #初始化\n``` \n\n#### 2, 简写：\n\n``` \nhexo n \"我的博客\" == hexo new \"我的博客\" #新建文章\nhexo p == hexo publish\nhexo g == hexo generate#生成\nhexo s == hexo server #启动服务预览\nhexo d == hexo deploy#部署\n``` \n\n#### 3, 服务器：\n\n``` \nhexo server #Hexo 会监视文件变动并自动更新，您无须重启服务器。\nhexo server -s #静态模式\nhexo server -p 5000 #更改端口\nhexo server -i 192.168.1.1 #自定义 IP\n\nhexo clean #清除缓存 网页正常情况下可以忽略此条命令\nhexo g #生成静态网页\nhexo d #开始部署\n``` \n\n#### 4, 监视文件变动：\n\n``` \nhexo generate #使用 Hexo 生成静态文件快速而且简单\nhexo generate --watch #监视文件变动\n``` \n\n完成后部署：\n\n- 两个命令的作用是相同的\n- hexo generate --deploy\n- hexo deploy --generate\n\n``` \nhexo deploy -g\nhexo server -g\n``` \n\n#### 5, 草稿\n\n``` \nhexo publish [layout] <title>\n``` \n\n#### 6, 模版\n\n``` \nhexo new \"postName\" #新建文章\nhexo new page \"pageName\" #新建页面\nhexo generate #生成静态页面至public目录\nhexo server #开启预览访问端口（默认端口4000，'ctrl + c'关闭server）\nhexo deploy #将.deploy目录部署到GitHub\n\nhexo new [layout] <title>\nhexo new photo \"My Gallery\"\nhexo new \"Hello World\" --lang tw\n``` \n\n| 变量 | 描述 |\n| --- | --- | \n| layout | 布局 |\n| title | 标题 |\n| date | 文件建立日期 |\n\n``` \ntitle: 使用Hexo搭建个人博客\nlayout: post\ndate: 2014-03-03 19:07:43\ncomments: true\ncategories: Blog\ntags: [Hexo]\nkeywords: Hexo, Blog\ndescription: 生命在于折腾，又把博客折腾到Hexo了。给Hexo点赞。\n``` \n","slug":"hello-hexo","published":1,"updated":"2020-04-02T11:28:34.122Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8jj90tb00029ufy35v6cak3","content":"<h2 id=\"一、hexo简介\"><a href=\"#一、hexo简介\" class=\"headerlink\" title=\"一、hexo简介\"></a>一、hexo简介</h2><h4 id=\"1-hexo是什么\"><a href=\"#1-hexo是什么\" class=\"headerlink\" title=\"1, hexo是什么\"></a>1, hexo是什么</h4><blockquote>\n<p>hexo(中文官方网站)是一个快速, 简洁且高效的博客框架. 让上百个页面在几秒内瞬间完成渲染. hexo支持Github Flavored Markdown的所有功能, 甚至可以整合Octopress的大多数插件. 并自己也拥有强大的插件系统.</p>\n</blockquote>\n<h4 id=\"2-安装\"><a href=\"#2-安装\" class=\"headerlink\" title=\"2, 安装\"></a>2, 安装</h4><pre><code>Hexo是基于node.js的, 所以我们在安装它之前需要用到npm安装工具, 这个工具是 node.js 安装包的工具, 所以, 我们先要安装 node.js.</code></pre><p>使用apt-get安装 nodejs.</p>\n<pre><code>$ sudo apt-get install -y nodejs</code></pre><h4 id=\"3-安装npm\"><a href=\"#3-安装npm\" class=\"headerlink\" title=\"3, 安装npm\"></a>3, 安装npm</h4><p>已经安装好了nodejs, 现在安装npm.</p>\n<pre><code>$ sudo apt-get install npm</code></pre><h4 id=\"4-安装hexo\"><a href=\"#4-安装hexo\" class=\"headerlink\" title=\"4, 安装hexo\"></a>4, 安装hexo</h4><p>现在我们使用npm安装hexo.</p>\n<pre><code>$ sudo npm install hexo-cli -g</code></pre><h2 id=\"二、创建Blog\"><a href=\"#二、创建Blog\" class=\"headerlink\" title=\"二、创建Blog\"></a>二、创建Blog</h2><p>现在我们已经完成hexo的安装, 那么现在我们来创建一个Blog.</p>\n<h4 id=\"1-创建一个叫blog网站\"><a href=\"#1-创建一个叫blog网站\" class=\"headerlink\" title=\"1, 创建一个叫blog网站\"></a>1, 创建一个叫blog网站</h4><pre><code>$ hexo init blog</code></pre><blockquote>\n<p>注: 如果不写blog, 就会在当前目录进行初始化. 如果后面跟了名子就会创建目录并在目录进行初始化操作, 以这个名子为目录名.</p>\n</blockquote>\n<h4 id=\"2-我们进入创建的blog目录里-并运行该服务\"><a href=\"#2-我们进入创建的blog目录里-并运行该服务\" class=\"headerlink\" title=\"2, 我们进入创建的blog目录里. 并运行该服务.\"></a>2, 我们进入创建的blog目录里. 并运行该服务.</h4><pre><code>$ cd blog\n$ npm install\n$ hexo server</code></pre><h4 id=\"3-打开浏览器-在地址栏输入http-localhost-4000-可以看到我们刚刚创建的blog首页\"><a href=\"#3-打开浏览器-在地址栏输入http-localhost-4000-可以看到我们刚刚创建的blog首页\" class=\"headerlink\" title=\"3, 打开浏览器, 在地址栏输入http://localhost:4000/可以看到我们刚刚创建的blog首页.\"></a>3, 打开浏览器, 在地址栏输入<a href=\"http://localhost:4000/可以看到我们刚刚创建的blog首页\" target=\"_blank\" rel=\"noopener\">http://localhost:4000/可以看到我们刚刚创建的blog首页</a>.</h4><h4 id=\"4-修改blog目录下的-config-yml配置文件将网站自部署到Github上\"><a href=\"#4-修改blog目录下的-config-yml配置文件将网站自部署到Github上\" class=\"headerlink\" title=\"4, 修改blog目录下的_config.yml配置文件将网站自部署到Github上.\"></a>4, 修改blog目录下的_config.yml配置文件将网站自部署到Github上.</h4><pre><code>deploy:\n  type: &apos;git&apos;\n  repository: https://github.com/pangzhanli/pangzhanli.github.io.git\n  branch: master</code></pre><blockquote>\n<p>注意在type前面需要增加两个空格, 在type的冒号后面需要增加一个空格. 请保持代码风格一致. 否则会出现错误或是不正确的问题.</p>\n</blockquote>\n<h4 id=\"5-安装部署使用到的git插件\"><a href=\"#5-安装部署使用到的git插件\" class=\"headerlink\" title=\"5, 安装部署使用到的git插件.\"></a>5, 安装部署使用到的git插件.</h4><p>在这里我们使用的是git源码管理工具, 所以, 我需要安装git包进行部署, 安装这个插件才能使用git进行自动部署</p>\n<pre><code>$ npm install hexo-deployer-git --save</code></pre><h4 id=\"6-进行生成网站\"><a href=\"#6-进行生成网站\" class=\"headerlink\" title=\"6, 进行生成网站\"></a>6, 进行生成网站</h4><p>当我们部署网站前, 需要先生成静态网站. 它会自动在目录下创建public的目录, 并将新生成的网页存放在这个目录里.</p>\n<pre><code>$ cd blog\n$ hexo g</code></pre><h4 id=\"7-进行自动部署网站-注意部署前需要重新生成网站-每一次修改后都需要重新生成网站并进行部署-生成网站前第6步\"><a href=\"#7-进行自动部署网站-注意部署前需要重新生成网站-每一次修改后都需要重新生成网站并进行部署-生成网站前第6步\" class=\"headerlink\" title=\"7, 进行自动部署网站, 注意部署前需要重新生成网站, 每一次修改后都需要重新生成网站并进行部署, 生成网站前第6步.\"></a>7, 进行自动部署网站, 注意部署前需要重新生成网站, 每一次修改后都需要重新生成网站并进行部署, 生成网站前第6步.</h4><pre><code>$ hexo d</code></pre><p>如果在部署出现错误信息如果下: 请参考第5步, 需要安装git插件</p>\n<pre><code>ERROR Deployer not found: git</code></pre><h2 id=\"三、hexo常用命令\"><a href=\"#三、hexo常用命令\" class=\"headerlink\" title=\"三、hexo常用命令\"></a>三、hexo常用命令</h2><h4 id=\"1-安装，升级，初始化\"><a href=\"#1-安装，升级，初始化\" class=\"headerlink\" title=\"1, 安装，升级，初始化\"></a>1, 安装，升级，初始化</h4><pre><code>npm install hexo -g #安装  \nnpm update hexo -g #升级  \nhexo init #初始化</code></pre><h4 id=\"2-简写：\"><a href=\"#2-简写：\" class=\"headerlink\" title=\"2, 简写：\"></a>2, 简写：</h4><pre><code>hexo n &quot;我的博客&quot; == hexo new &quot;我的博客&quot; #新建文章\nhexo p == hexo publish\nhexo g == hexo generate#生成\nhexo s == hexo server #启动服务预览\nhexo d == hexo deploy#部署</code></pre><h4 id=\"3-服务器：\"><a href=\"#3-服务器：\" class=\"headerlink\" title=\"3, 服务器：\"></a>3, 服务器：</h4><pre><code>hexo server #Hexo 会监视文件变动并自动更新，您无须重启服务器。\nhexo server -s #静态模式\nhexo server -p 5000 #更改端口\nhexo server -i 192.168.1.1 #自定义 IP\n\nhexo clean #清除缓存 网页正常情况下可以忽略此条命令\nhexo g #生成静态网页\nhexo d #开始部署</code></pre><h4 id=\"4-监视文件变动：\"><a href=\"#4-监视文件变动：\" class=\"headerlink\" title=\"4, 监视文件变动：\"></a>4, 监视文件变动：</h4><pre><code>hexo generate #使用 Hexo 生成静态文件快速而且简单\nhexo generate --watch #监视文件变动</code></pre><p>完成后部署：</p>\n<ul>\n<li>两个命令的作用是相同的</li>\n<li>hexo generate –deploy</li>\n<li>hexo deploy –generate</li>\n</ul>\n<pre><code>hexo deploy -g\nhexo server -g</code></pre><h4 id=\"5-草稿\"><a href=\"#5-草稿\" class=\"headerlink\" title=\"5, 草稿\"></a>5, 草稿</h4><pre><code>hexo publish [layout] &lt;title&gt;</code></pre><h4 id=\"6-模版\"><a href=\"#6-模版\" class=\"headerlink\" title=\"6, 模版\"></a>6, 模版</h4><pre><code>hexo new &quot;postName&quot; #新建文章\nhexo new page &quot;pageName&quot; #新建页面\nhexo generate #生成静态页面至public目录\nhexo server #开启预览访问端口（默认端口4000，&apos;ctrl + c&apos;关闭server）\nhexo deploy #将.deploy目录部署到GitHub\n\nhexo new [layout] &lt;title&gt;\nhexo new photo &quot;My Gallery&quot;\nhexo new &quot;Hello World&quot; --lang tw</code></pre><table>\n<thead>\n<tr>\n<th>变量</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>layout</td>\n<td>布局</td>\n</tr>\n<tr>\n<td>title</td>\n<td>标题</td>\n</tr>\n<tr>\n<td>date</td>\n<td>文件建立日期</td>\n</tr>\n</tbody></table>\n<pre><code>title: 使用Hexo搭建个人博客\nlayout: post\ndate: 2014-03-03 19:07:43\ncomments: true\ncategories: Blog\ntags: [Hexo]\nkeywords: Hexo, Blog\ndescription: 生命在于折腾，又把博客折腾到Hexo了。给Hexo点赞。</code></pre>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"一、hexo简介\"><a href=\"#一、hexo简介\" class=\"headerlink\" title=\"一、hexo简介\"></a>一、hexo简介</h2><h4 id=\"1-hexo是什么\"><a href=\"#1-hexo是什么\" class=\"headerlink\" title=\"1, hexo是什么\"></a>1, hexo是什么</h4><blockquote>\n<p>hexo(中文官方网站)是一个快速, 简洁且高效的博客框架. 让上百个页面在几秒内瞬间完成渲染. hexo支持Github Flavored Markdown的所有功能, 甚至可以整合Octopress的大多数插件. 并自己也拥有强大的插件系统.</p>\n</blockquote>\n<h4 id=\"2-安装\"><a href=\"#2-安装\" class=\"headerlink\" title=\"2, 安装\"></a>2, 安装</h4><pre><code>Hexo是基于node.js的, 所以我们在安装它之前需要用到npm安装工具, 这个工具是 node.js 安装包的工具, 所以, 我们先要安装 node.js.</code></pre><p>使用apt-get安装 nodejs.</p>\n<pre><code>$ sudo apt-get install -y nodejs</code></pre><h4 id=\"3-安装npm\"><a href=\"#3-安装npm\" class=\"headerlink\" title=\"3, 安装npm\"></a>3, 安装npm</h4><p>已经安装好了nodejs, 现在安装npm.</p>\n<pre><code>$ sudo apt-get install npm</code></pre><h4 id=\"4-安装hexo\"><a href=\"#4-安装hexo\" class=\"headerlink\" title=\"4, 安装hexo\"></a>4, 安装hexo</h4><p>现在我们使用npm安装hexo.</p>\n<pre><code>$ sudo npm install hexo-cli -g</code></pre><h2 id=\"二、创建Blog\"><a href=\"#二、创建Blog\" class=\"headerlink\" title=\"二、创建Blog\"></a>二、创建Blog</h2><p>现在我们已经完成hexo的安装, 那么现在我们来创建一个Blog.</p>\n<h4 id=\"1-创建一个叫blog网站\"><a href=\"#1-创建一个叫blog网站\" class=\"headerlink\" title=\"1, 创建一个叫blog网站\"></a>1, 创建一个叫blog网站</h4><pre><code>$ hexo init blog</code></pre><blockquote>\n<p>注: 如果不写blog, 就会在当前目录进行初始化. 如果后面跟了名子就会创建目录并在目录进行初始化操作, 以这个名子为目录名.</p>\n</blockquote>\n<h4 id=\"2-我们进入创建的blog目录里-并运行该服务\"><a href=\"#2-我们进入创建的blog目录里-并运行该服务\" class=\"headerlink\" title=\"2, 我们进入创建的blog目录里. 并运行该服务.\"></a>2, 我们进入创建的blog目录里. 并运行该服务.</h4><pre><code>$ cd blog\n$ npm install\n$ hexo server</code></pre><h4 id=\"3-打开浏览器-在地址栏输入http-localhost-4000-可以看到我们刚刚创建的blog首页\"><a href=\"#3-打开浏览器-在地址栏输入http-localhost-4000-可以看到我们刚刚创建的blog首页\" class=\"headerlink\" title=\"3, 打开浏览器, 在地址栏输入http://localhost:4000/可以看到我们刚刚创建的blog首页.\"></a>3, 打开浏览器, 在地址栏输入<a href=\"http://localhost:4000/可以看到我们刚刚创建的blog首页\" target=\"_blank\" rel=\"noopener\">http://localhost:4000/可以看到我们刚刚创建的blog首页</a>.</h4><h4 id=\"4-修改blog目录下的-config-yml配置文件将网站自部署到Github上\"><a href=\"#4-修改blog目录下的-config-yml配置文件将网站自部署到Github上\" class=\"headerlink\" title=\"4, 修改blog目录下的_config.yml配置文件将网站自部署到Github上.\"></a>4, 修改blog目录下的_config.yml配置文件将网站自部署到Github上.</h4><pre><code>deploy:\n  type: &apos;git&apos;\n  repository: https://github.com/pangzhanli/pangzhanli.github.io.git\n  branch: master</code></pre><blockquote>\n<p>注意在type前面需要增加两个空格, 在type的冒号后面需要增加一个空格. 请保持代码风格一致. 否则会出现错误或是不正确的问题.</p>\n</blockquote>\n<h4 id=\"5-安装部署使用到的git插件\"><a href=\"#5-安装部署使用到的git插件\" class=\"headerlink\" title=\"5, 安装部署使用到的git插件.\"></a>5, 安装部署使用到的git插件.</h4><p>在这里我们使用的是git源码管理工具, 所以, 我需要安装git包进行部署, 安装这个插件才能使用git进行自动部署</p>\n<pre><code>$ npm install hexo-deployer-git --save</code></pre><h4 id=\"6-进行生成网站\"><a href=\"#6-进行生成网站\" class=\"headerlink\" title=\"6, 进行生成网站\"></a>6, 进行生成网站</h4><p>当我们部署网站前, 需要先生成静态网站. 它会自动在目录下创建public的目录, 并将新生成的网页存放在这个目录里.</p>\n<pre><code>$ cd blog\n$ hexo g</code></pre><h4 id=\"7-进行自动部署网站-注意部署前需要重新生成网站-每一次修改后都需要重新生成网站并进行部署-生成网站前第6步\"><a href=\"#7-进行自动部署网站-注意部署前需要重新生成网站-每一次修改后都需要重新生成网站并进行部署-生成网站前第6步\" class=\"headerlink\" title=\"7, 进行自动部署网站, 注意部署前需要重新生成网站, 每一次修改后都需要重新生成网站并进行部署, 生成网站前第6步.\"></a>7, 进行自动部署网站, 注意部署前需要重新生成网站, 每一次修改后都需要重新生成网站并进行部署, 生成网站前第6步.</h4><pre><code>$ hexo d</code></pre><p>如果在部署出现错误信息如果下: 请参考第5步, 需要安装git插件</p>\n<pre><code>ERROR Deployer not found: git</code></pre><h2 id=\"三、hexo常用命令\"><a href=\"#三、hexo常用命令\" class=\"headerlink\" title=\"三、hexo常用命令\"></a>三、hexo常用命令</h2><h4 id=\"1-安装，升级，初始化\"><a href=\"#1-安装，升级，初始化\" class=\"headerlink\" title=\"1, 安装，升级，初始化\"></a>1, 安装，升级，初始化</h4><pre><code>npm install hexo -g #安装  \nnpm update hexo -g #升级  \nhexo init #初始化</code></pre><h4 id=\"2-简写：\"><a href=\"#2-简写：\" class=\"headerlink\" title=\"2, 简写：\"></a>2, 简写：</h4><pre><code>hexo n &quot;我的博客&quot; == hexo new &quot;我的博客&quot; #新建文章\nhexo p == hexo publish\nhexo g == hexo generate#生成\nhexo s == hexo server #启动服务预览\nhexo d == hexo deploy#部署</code></pre><h4 id=\"3-服务器：\"><a href=\"#3-服务器：\" class=\"headerlink\" title=\"3, 服务器：\"></a>3, 服务器：</h4><pre><code>hexo server #Hexo 会监视文件变动并自动更新，您无须重启服务器。\nhexo server -s #静态模式\nhexo server -p 5000 #更改端口\nhexo server -i 192.168.1.1 #自定义 IP\n\nhexo clean #清除缓存 网页正常情况下可以忽略此条命令\nhexo g #生成静态网页\nhexo d #开始部署</code></pre><h4 id=\"4-监视文件变动：\"><a href=\"#4-监视文件变动：\" class=\"headerlink\" title=\"4, 监视文件变动：\"></a>4, 监视文件变动：</h4><pre><code>hexo generate #使用 Hexo 生成静态文件快速而且简单\nhexo generate --watch #监视文件变动</code></pre><p>完成后部署：</p>\n<ul>\n<li>两个命令的作用是相同的</li>\n<li>hexo generate –deploy</li>\n<li>hexo deploy –generate</li>\n</ul>\n<pre><code>hexo deploy -g\nhexo server -g</code></pre><h4 id=\"5-草稿\"><a href=\"#5-草稿\" class=\"headerlink\" title=\"5, 草稿\"></a>5, 草稿</h4><pre><code>hexo publish [layout] &lt;title&gt;</code></pre><h4 id=\"6-模版\"><a href=\"#6-模版\" class=\"headerlink\" title=\"6, 模版\"></a>6, 模版</h4><pre><code>hexo new &quot;postName&quot; #新建文章\nhexo new page &quot;pageName&quot; #新建页面\nhexo generate #生成静态页面至public目录\nhexo server #开启预览访问端口（默认端口4000，&apos;ctrl + c&apos;关闭server）\nhexo deploy #将.deploy目录部署到GitHub\n\nhexo new [layout] &lt;title&gt;\nhexo new photo &quot;My Gallery&quot;\nhexo new &quot;Hello World&quot; --lang tw</code></pre><table>\n<thead>\n<tr>\n<th>变量</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>layout</td>\n<td>布局</td>\n</tr>\n<tr>\n<td>title</td>\n<td>标题</td>\n</tr>\n<tr>\n<td>date</td>\n<td>文件建立日期</td>\n</tr>\n</tbody></table>\n<pre><code>title: 使用Hexo搭建个人博客\nlayout: post\ndate: 2014-03-03 19:07:43\ncomments: true\ncategories: Blog\ntags: [Hexo]\nkeywords: Hexo, Blog\ndescription: 生命在于折腾，又把博客折腾到Hexo了。给Hexo点赞。</code></pre>"},{"title":"c语言基本运算中的自增运算符和自减运算符以及三目运算符","date":"2020-04-02T11:42:20.000Z","_content":"\n\n一：简介\n\n自增运算符   ++     例如：a++，b++, c++ , ++a, ++b,++c  它们都是自增运算。\n\n自减运算符   - -      例如：a- - ,  b - -,  c- - ，- -a，- -b， - -c 它们都是自减运算。\n\n自增和自减用于变量，不能用于常量。\n\n\n\n二： a++和++a的区别\n\na++ 是先赋值，后计算。\n\n++a 是先计算，后赋值。\n\n例如：  \n\nint a=5;\n\nint b=a++;\n\n程序运行之后，a=6,b=5 ， a++是先把a的值赋给b,然后，在进行自身加1运算\n\n但是，比如下面这种情况：\n\nint a=5;\n\nint b=++a;\n\n程序运行之后，a=6,b=6,   ++a是先进行+1的运算，然后，再将运算之后的值赋给变量b","source":"_posts/c语言基本运算中的自增运算符和自减运算符以及三目运算符.md","raw":"---\ntitle: c语言基本运算中的自增运算符和自减运算符以及三目运算符\ndate: 2020-04-02 19:42:20\ncategories: C语言\n---\n\n\n一：简介\n\n自增运算符   ++     例如：a++，b++, c++ , ++a, ++b,++c  它们都是自增运算。\n\n自减运算符   - -      例如：a- - ,  b - -,  c- - ，- -a，- -b， - -c 它们都是自减运算。\n\n自增和自减用于变量，不能用于常量。\n\n\n\n二： a++和++a的区别\n\na++ 是先赋值，后计算。\n\n++a 是先计算，后赋值。\n\n例如：  \n\nint a=5;\n\nint b=a++;\n\n程序运行之后，a=6,b=5 ， a++是先把a的值赋给b,然后，在进行自身加1运算\n\n但是，比如下面这种情况：\n\nint a=5;\n\nint b=++a;\n\n程序运行之后，a=6,b=6,   ++a是先进行+1的运算，然后，再将运算之后的值赋给变量b","slug":"c语言基本运算中的自增运算符和自减运算符以及三目运算符","published":1,"updated":"2020-04-02T11:43:35.612Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8jj90te00049ufyflll16m3","content":"<p>一：简介</p>\n<p>自增运算符   ++     例如：a++，b++, c++ , ++a, ++b,++c  它们都是自增运算。</p>\n<p>自减运算符   - -      例如：a- - ,  b - -,  c- - ，- -a，- -b， - -c 它们都是自减运算。</p>\n<p>自增和自减用于变量，不能用于常量。</p>\n<p>二： a++和++a的区别</p>\n<p>a++ 是先赋值，后计算。</p>\n<p>++a 是先计算，后赋值。</p>\n<p>例如：  </p>\n<p>int a=5;</p>\n<p>int b=a++;</p>\n<p>程序运行之后，a=6,b=5 ， a++是先把a的值赋给b,然后，在进行自身加1运算</p>\n<p>但是，比如下面这种情况：</p>\n<p>int a=5;</p>\n<p>int b=++a;</p>\n<p>程序运行之后，a=6,b=6,   ++a是先进行+1的运算，然后，再将运算之后的值赋给变量b</p>\n","site":{"data":{}},"excerpt":"","more":"<p>一：简介</p>\n<p>自增运算符   ++     例如：a++，b++, c++ , ++a, ++b,++c  它们都是自增运算。</p>\n<p>自减运算符   - -      例如：a- - ,  b - -,  c- - ，- -a，- -b， - -c 它们都是自减运算。</p>\n<p>自增和自减用于变量，不能用于常量。</p>\n<p>二： a++和++a的区别</p>\n<p>a++ 是先赋值，后计算。</p>\n<p>++a 是先计算，后赋值。</p>\n<p>例如：  </p>\n<p>int a=5;</p>\n<p>int b=a++;</p>\n<p>程序运行之后，a=6,b=5 ， a++是先把a的值赋给b,然后，在进行自身加1运算</p>\n<p>但是，比如下面这种情况：</p>\n<p>int a=5;</p>\n<p>int b=++a;</p>\n<p>程序运行之后，a=6,b=6,   ++a是先进行+1的运算，然后，再将运算之后的值赋给变量b</p>\n"},{"title":"c语言基本数据类型简单介绍","date":"2020-04-02T11:39:11.000Z","_content":"\n\nc语言有丰富的数据类型，大致上包括四种，基本数据类型,构造类型，指针类型，空类型。\n\n基本数据类型包括int ,float, double, char这四种。\n\nint类型的变量用来存储整型数据，float类型的变量用来存储单精度浮点型，double类型的变量用来存储用来存储双精度浮点型，char类型的变量用来存储字符。\n\n\n\n在c语言中，如果声明了一个局部变量，没有经过初始化是可以使用，例如\n\n\n\n\n\n这样是可以的，但是很危险。b的值是系统随意分配的，是垃圾数据。所以，在用的时候，一定要赋值之后再使用。\n\n\n\n如果int类型的变量是全局变量，系统会默认赋值为0。例如：\n\n\n\nchar类型只能存储一个字符，例如：\n\nchar a1='A';\n\nchar a2='b';\n\n\n\n其实，char b1=65;这种写法也是可以的。像65就是ASCII码值，也就是相当于char b1='A';","source":"_posts/c语言基本数据类型简单介绍.md","raw":"---\ntitle: c语言基本数据类型简单介绍\ndate: 2020-04-02 19:39:11\ncategories: C语言\n---\n\n\nc语言有丰富的数据类型，大致上包括四种，基本数据类型,构造类型，指针类型，空类型。\n\n基本数据类型包括int ,float, double, char这四种。\n\nint类型的变量用来存储整型数据，float类型的变量用来存储单精度浮点型，double类型的变量用来存储用来存储双精度浮点型，char类型的变量用来存储字符。\n\n\n\n在c语言中，如果声明了一个局部变量，没有经过初始化是可以使用，例如\n\n\n\n\n\n这样是可以的，但是很危险。b的值是系统随意分配的，是垃圾数据。所以，在用的时候，一定要赋值之后再使用。\n\n\n\n如果int类型的变量是全局变量，系统会默认赋值为0。例如：\n\n\n\nchar类型只能存储一个字符，例如：\n\nchar a1='A';\n\nchar a2='b';\n\n\n\n其实，char b1=65;这种写法也是可以的。像65就是ASCII码值，也就是相当于char b1='A';","slug":"c语言基本数据类型简单介绍","published":1,"updated":"2020-04-02T11:40:10.658Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8jj90te00059ufy2gaob8yl","content":"<p>c语言有丰富的数据类型，大致上包括四种，基本数据类型,构造类型，指针类型，空类型。</p>\n<p>基本数据类型包括int ,float, double, char这四种。</p>\n<p>int类型的变量用来存储整型数据，float类型的变量用来存储单精度浮点型，double类型的变量用来存储用来存储双精度浮点型，char类型的变量用来存储字符。</p>\n<p>在c语言中，如果声明了一个局部变量，没有经过初始化是可以使用，例如</p>\n<p>这样是可以的，但是很危险。b的值是系统随意分配的，是垃圾数据。所以，在用的时候，一定要赋值之后再使用。</p>\n<p>如果int类型的变量是全局变量，系统会默认赋值为0。例如：</p>\n<p>char类型只能存储一个字符，例如：</p>\n<p>char a1=’A’;</p>\n<p>char a2=’b’;</p>\n<p>其实，char b1=65;这种写法也是可以的。像65就是ASCII码值，也就是相当于char b1=’A’;</p>\n","site":{"data":{}},"excerpt":"","more":"<p>c语言有丰富的数据类型，大致上包括四种，基本数据类型,构造类型，指针类型，空类型。</p>\n<p>基本数据类型包括int ,float, double, char这四种。</p>\n<p>int类型的变量用来存储整型数据，float类型的变量用来存储单精度浮点型，double类型的变量用来存储用来存储双精度浮点型，char类型的变量用来存储字符。</p>\n<p>在c语言中，如果声明了一个局部变量，没有经过初始化是可以使用，例如</p>\n<p>这样是可以的，但是很危险。b的值是系统随意分配的，是垃圾数据。所以，在用的时候，一定要赋值之后再使用。</p>\n<p>如果int类型的变量是全局变量，系统会默认赋值为0。例如：</p>\n<p>char类型只能存储一个字符，例如：</p>\n<p>char a1=’A’;</p>\n<p>char a2=’b’;</p>\n<p>其实，char b1=65;这种写法也是可以的。像65就是ASCII码值，也就是相当于char b1=’A’;</p>\n"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2020-04-02T11:28:34.122Z","updated":"2020-04-02T11:28:34.122Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8jj90tj000d9ufy48b2d991","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ck8jj90te00059ufy2gaob8yl","category_id":"ck8jj90tc00039ufybxcy4l47","_id":"ck8jj90tg00079ufy03avcukl"},{"post_id":"ck8jj90t900019ufy0hib2zku","category_id":"ck8jj90tc00039ufybxcy4l47","_id":"ck8jj90th00099ufyhri03vq6"},{"post_id":"ck8jj90tb00029ufy35v6cak3","category_id":"ck8jj90tf00069ufy0q8c0j1h","_id":"ck8jj90th000a9ufyfft8052k"},{"post_id":"ck8jj90te00049ufyflll16m3","category_id":"ck8jj90tc00039ufybxcy4l47","_id":"ck8jj90ti000b9ufy583nbvzk"}],"PostTag":[],"Tag":[]}}